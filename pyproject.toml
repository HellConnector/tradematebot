[project]
name = "tradematebot"
version = "0.1.0"
description = "Telegram Bot that helps to monitor and track CS2 investments"
authors = [{ name = "HellConnector", email = "kavai.barbarian@gmail.com" }]
requires-python = "~=3.13"
readme = "README.md"
license = "Apache-2.0"
dependencies = [
    "python-telegram-bot==22.0",
    "asyncpg==0.30",
    "apscheduler>=3.10.1,<4",
    "alembic>=1.10.3,<2",
    "python-dotenv>=1.0.0,<2",
    "sqlalchemy[asyncio, mypy]>=2.0.27,<3",
    "httpx==0.28.1",
    "hatchling>=1.27.0",
]

[project.scripts]
bot = "bot.main:run"
price-worker = "price-worker.main:run"
items2db-worker = "cs2-items-parser.main:run"
search-items-worker = "search-items-worker.main:run"
alembic = "bot.db.command:run"
mini-app-api = "mini_app_api.main:run"

[dependency-groups]
dev = [
    "ruff==0.11.7",
    "mypy>=1.14.1,<2",
]
parser = ["vdf~=3.4"]
mini-app = [
    "fastapi>=0.110.0,<0.111",
    "uvicorn[standard]>=0.28.0,<0.29",
    "python-multipart>=0.0.9,<0.0.10",
    "sentry-sdk[fastapi]>=2.19.2,<3",
]

[tool.uv]
default-groups = [
    "parser",
    "mini-app",
]

[tool.hatch.build.targets.wheel]
include = [
    "bot",
    "price-worker",
    "search-items-worker",
    "mini_app_api",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py313"
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 79
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
exclude = [
    '^file1\.py$',  # TOML literal string (single-quotes, no escaping necessary)
    "^file2\\.py$", # TOML basic string (double-quotes, backslash and other characters need escaping)
]
ignore_missing_imports = true
plugins = ["sqlalchemy.ext.mypy.plugin"]
